{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = '43820023 - fa202629be5215ad836dbfc98';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport const fetchPhotosByQuery = (query = 'cat') => {\n    \n    const searchParams = new URLSearchParams({\n        key: API_KEY,\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n    });\n\n    return fetch(`${BASE_URL}?${searchParams}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return response.json();\n  });\n\n}\n","export const createGalleryItemMarkup = images => {\n  return images\n    .map(\n        ({ webformatURL, largeImageURL, tags, likes, view, comments, downloads }) => \n        `<li class=\"gallery-item\">\n         <a class=\"gallery-link js-gallery-link\" href='${image.largeImageURL}'>\n              <img src='${image.webformatURL}' alt='${image.tags}' title='${image.tags}'>\n         </a>\n         <div class=\"image-details\">\n              <ul class=\"details-title\">\n                 <li class=\"details-title-det\">\n                     <h3 class=\"title-info\">Likes:</h3>\n                     <p class=\"paragraph-info\">'${image.likes}'</p>\n                  </li>\n                 <li class=\"details-title-det\">\n                     <h3 class=\"title-info\">Views:</h3>\n                     <p class=\"paragraph-info\">'${image.views}'</p>\n                 </li>  \n                 <li class=\"details-title-det\">\n                     <h3 class=\"title-info\">Comments:</h3>\n                      <p class=\"paragraph-info\">'${image.comments}'</p>\n                  </li>  \n                  <li class=\"details-title-det\">\n                      <h3 class=\"title-info\">Downloads:</h3>\n                      <p class=\"paragraph-info\">'${image.downloads}'</p>\n                  </li>\n             </ul>\n         </div>\n      </li>`\n    ).join('');\n}\n      \n","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nimport { fetchPhotosByQuery } from './js/pixabay-api.js';\nimport { createGalleryItemMarkup } from './js/render-functions.js';\n\nconst searchForm = document.querySelector('.js-search-form');\nconst listGallery = document.querySelector('.gallery-list');\nconst loader = document.querySelector('.loader');\n\nlet lightbox;\n\nfunction onSearchFormSubmit(event) {\n    event.preventDefault();\n    const searchQuery = event.target.elements.searchKeyword.value.trim();\n\n    if (searchQuery === '') {\n        iziToast.show({\n            message: 'Sorry, there are no images matching your search query. Please try again!',\n            position: 'topRight',\n            timeout: 2000,\n            color: 'red',\n        });\n        return;\n    }\n\n    listGallery.innerHTML = '';\n    loader.classList.remove('is-hidden');\n\n    fetchPhotosByQuery(searchQuery)\n        .then(imagesData => {\n            if (imagesData.hits.length === 0) {\n                iziToast.show({\n                    message: 'Sorry, there are no images for this query',\n                    position: 'topRight',\n                    timeout: 2000,\n                    color: 'red',\n                });\n                return;\n            }\n\n            listGallery.innerHTML = createGalleryItemMarkup(imagesData);\n\n            if (lightbox) {\n                lightbox.destroy();\n            }\n            lightbox = new SimpleLightbox('.js-gallery a', {\n                captionDelay: 250,\n            });\n        })\n        .catch(error => {\n            console.error('Error fetching photos:', error);\n            iziToast.show({\n                message: 'An error occurred while fetching photos',\n                position: 'topRight',\n                timeout: 2000,\n                color: 'red',\n            });\n        })\n        .finally(() => {\n            loader.classList.add('is-hidden');\n        });\n}\n\nsearchForm.addEventListener('submit', onSearchFormSubmit);"],"names":["API_KEY","BASE_URL","fetchPhotosByQuery","query","searchParams","response","createGalleryItemMarkup","images","webformatURL","largeImageURL","tags","likes","view","comments","downloads","searchForm","listGallery","loader","lightbox","onSearchFormSubmit","event","searchQuery","iziToast","imagesData","SimpleLightbox","error"],"mappings":"6vBAAA,MAAMA,EAAU,uCACVC,EAAW,2BAEJC,EAAqB,CAACC,EAAQ,QAAU,CAEjD,MAAMC,EAAe,IAAI,gBAAgB,CACrC,IAAKJ,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACpB,CAAK,EAED,OAAO,MAAM,GAAGF,CAAQ,IAAIG,CAAY,EAAE,EAAE,KAAKC,GAAY,CAC7D,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,UAAU,EAGrC,OAAOA,EAAS,MACpB,CAAG,CAEH,ECrBaC,EAA0BC,GAC9BA,EACJ,IACG,CAAC,CAAE,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,KAAAC,EAAM,SAAAC,EAAU,UAAAC,CAAW,IACxE;AAAA,yDACiD,MAAM,aAAa;AAAA,0BAClD,MAAM,YAAY,UAAU,MAAM,IAAI,YAAY,MAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAMpC,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA,kDAIX,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA,mDAIV,MAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,mDAId,MAAM,SAAS;AAAA;AAAA;AAAA;AAAA,YAKlE,EAAM,KAAK,EAAE,ECpBPC,EAAa,SAAS,cAAc,iBAAiB,EACrDC,EAAc,SAAS,cAAc,eAAe,EACpDC,EAAS,SAAS,cAAc,SAAS,EAE/C,IAAIC,EAEJ,SAASC,EAAmBC,EAAO,CAC/BA,EAAM,eAAc,EACpB,MAAMC,EAAcD,EAAM,OAAO,SAAS,cAAc,MAAM,OAE9D,GAAIC,IAAgB,GAAI,CACpBC,EAAS,KAAK,CACV,QAAS,2EACT,SAAU,WACV,QAAS,IACT,MAAO,KACnB,CAAS,EACD,MACH,CAEDN,EAAY,UAAY,GACxBC,EAAO,UAAU,OAAO,WAAW,EAEnCf,EAAmBmB,CAAW,EACzB,KAAKE,GAAc,CAChB,GAAIA,EAAW,KAAK,SAAW,EAAG,CAC9BD,EAAS,KAAK,CACV,QAAS,4CACT,SAAU,WACV,QAAS,IACT,MAAO,KAC3B,CAAiB,EACD,MACH,CAEDN,EAAY,UAAYV,EAAwBiB,CAAU,EAEtDL,GACAA,EAAS,QAAO,EAEpBA,EAAW,IAAIM,EAAe,gBAAiB,CAC3C,aAAc,GAC9B,CAAa,CACb,CAAS,EACA,MAAMC,GAAS,CACZ,QAAQ,MAAM,yBAA0BA,CAAK,EAC7CH,EAAS,KAAK,CACV,QAAS,0CACT,SAAU,WACV,QAAS,IACT,MAAO,KACvB,CAAa,CACb,CAAS,EACA,QAAQ,IAAM,CACXL,EAAO,UAAU,IAAI,WAAW,CAC5C,CAAS,CACT,CAEAF,EAAW,iBAAiB,SAAUI,CAAkB"}